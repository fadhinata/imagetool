/* Copyright 2011 Hoyoung Yi. This program is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this program; if not, please visit www.gnu.org.*/#ifndef __BACKSYM_H__#define __BACKSYM_H__#include <common.h>#include <bitmap.h>#include <bytemap.h>#include <wordmap.h>#ifdef __cplusplusextern "C" {#endif  int bytemap_background_symmetry_level(int *hist, int n, real_t ratio);  void bytemap_background_symmetry_threshold(bitmap_t *q, bytemap_t *p, real_t ratio);  void bytemap_background_symmetry_threshold_on_roi(bitmap_t *q, bytemap_t *p, real_t ratio, bitmap_t *roi);  void bytemap_background_symmetry_threshold_on_region(bitmap_t *q, bytemap_t *p, real_t ratio, int x, int y, int dx, int dy);  int wordmap_background_symmetry_level(int *hist, int n, real_t ratio);  void wordmap_background_symmetry_threshold(bitmap_t *q, wordmap_t *p, real_t ratio);  void wordmap_background_symmetry_threshold_on_roi(bitmap_t *q, wordmap_t *p, real_t ratio, bitmap_t *roi);  void wordmap_background_symmetry_threshold_on_region(bitmap_t *q, wordmap_t *p, real_t ratio, int x, int y, int dx, int dy);#ifdef __cplusplus}#endif#endif /* __BACKSYM_H__ */