/*
 Copyright 2011 Hoyoung Yi.

 This program is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 License for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this program; if not, please visit www.gnu.org.
*/
#ifndef __REGIONGROW_H__
#define __REGIONGROW_H__

//#define NDEBUG

#include <stdio.h>
#include <math.h>
#include <malloc.h>
#include <float.h>
#include <limits.h>
#include <time.h>
#include <stdlib.h>
#include <stdint.h>
#include <memory.h>
#include <common.h>
#include <assert.h>
#include <errno.h>
#include <matrix.h>
#include <vector.h>
#include <neighbor.h>

#ifdef __cplusplus
extern "C" {
#endif

  size_t get_region_growing_tracks(size_t *xtracks, size_t *ytracks, size_t n);
  size_t get_region_growing_contrast(double *average, double *peripheral, size_t n);
  /* region growing: A New Approach - S. A. Hojjatoleslami and J. Kittler */
  int region_growing_by_contrast(dwordmap_t *labelmap, bytemap_t *image, bitmap_t *roi, uint32_t label,
				    uint32_t xseed, uint32_t yseed, neighbor_t type,
				    uint32_t maxcount, double maxac, double maxpc);

#ifdef __cplusplus
}
#endif

#endif /* __REGIONGROW_H__ */
